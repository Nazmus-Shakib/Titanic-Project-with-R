biblioshiny()
biblioshiny()
library(bibliometrix)
biblioshiny()
train <- read.csv("~/datasets/titanic/train.csv")
test <- read.csv("~/datasets/titanic/test.csv")
summary(train$Sex)
View(train)
setwd("~/datasets/titanic")
train <- read.csv("~/datasets/titanic/train.csv")
test <- read.csv("~/datasets/titanic/test.csv")
# library load, "rpart" is the decision tree
# (rpart: Recursive Partitioning and Regression Trees)
library(rpart)
# predicting our classifcation model to "model" object
model <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked, data=train, method="class")
View(model)
# Now let's make a prediction and dump it to a dataframe
my_predict <- predict(model, test, type = "class")
my_predict_df <- data.frame(PassengerId = test$PassengerId, Name= test$Name, Survived = my_predict)
View(my_predict_df)
setwd("~/datasets/titanic")
train <- read.csv("~/datasets/titanic/train.csv")
test <- read.csv("~/datasets/titanic/test.csv")
test$Survived <- NA
View(test)
combined_set <- rbind(train, test)
View(combined_set)
# Can we see a name?
train$Name[1]
# Convert to a string
combined_set$Name <- as.character(combined_set$Name)
# What's in a name, again?
combined_set$Name[1]
# Find the indexes for the tile piece of the name
strsplit(combined_set$Name[1], split='[,.]')
strsplit(combined_set$Name[1], split='[,.]')[[1]]
strsplit(combined_set$Name[1], split='[,.]')[[1]][2]
combined_set$Title <- sapply(combined_set$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combined_set$Title <- sub(' ', '', combined_set$Title)
# Inspect new feature
table(combined_set$Title)
combined_set$Mother <- 'Not Mother'
combined_set$Mother[combined_set$Sex == 'female' & combined_set$Parch > 0 & combined_set$Age > 18 & combined_set$Title != 'Miss'] <- 'Mother'
# Show counts
table(combined_set$Mother, combined_set$Survived)
# Convert to a factor
combined_set$Mother <- factor(combined_set$Mother)
View(combined_set)
# Engineered variable: Family size
combined_set$FamilySize <- combined_set$SibSp + combined_set$Parch + 1
# Engineered variable: Family
combined_set$Surname <- sapply(combined_set$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combined_set$FamilyID <- paste(as.character(combined_set$FamilySize), combined_set$Surname, sep="")
combined_set$FamilyID[combined_set$FamilySize == 1] <- 'single'
combined_set$FamilyID[combined_set$FamilySize < 5 & combined_set$FamilySize > 1] <- 'Small'
combined_set$FamilyID[combined_set$FamilySize > 4] <- 'large'
# a new plot
mosaicplot(table(combined_set$FamilySizeGroup, combined_set$Survived), main='Survival affected by Family Size ', shade=TRUE)
# a new plot
mosaicplot(table(combined_set$FamilyID, combined_set$Survived), main='Survival affected by Family Size ', shade=TRUE)
